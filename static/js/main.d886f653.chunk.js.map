{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Taskinput","setTaskinput","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","editItems","setEditItem","toggleBtn","setToggleBtn","addItem","map","currentElement","id","name","newTaskData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","onClick","index","item_edited","find","editItem","updatedItem","filter","deleteItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAuHeA,MA5Gf,WAAgB,IAAD,EACb,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAVP,WACnB,IAAMG,EAAQC,aAAaC,QAAQ,YACnC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,GAK0BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAiCV,mBAAS,IAA1C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAAkCZ,oBAAS,GAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KAGMC,EAAU,WACd,GAAKd,EAEC,GAAGA,GAAaY,EACpBH,EACED,EAAMO,KAAI,SAACC,GACT,OAAGA,EAAeC,KAAOP,EACzB,2BAAUM,GAAV,IAAyBE,KAAKlB,IAEvBgB,MAGXf,EAAa,IACbU,EAAY,MACZE,GAAa,OACT,CACJ,IAAMM,EAAc,CAClBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAERS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SAnBbsB,MAAM,wBAoDV,OAJAC,qBAAU,WACRrB,aAAasB,QAAQ,WAAYpB,KAAKqB,UAAUlB,MAC/C,CAACA,IAGF,qBAAKmB,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,qBAAKA,UAAU,WAAWC,IAAI,wDAAwDC,IAAI,aAC1F,4BAAYF,UAAU,UAAtB,wBAEF,sBAAKA,UAAU,WAAf,UACE,uBAAOA,UAAU,aACfG,KAAK,OACLC,YAAY,mBACZC,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAWjC,EAAaiC,EAAMC,OAAOH,UAEhDpB,EACC,2BAAQe,UAAU,kBAAlB,0BAA6C,UAA7C,wBAA+Db,GAA/D,qCACA,wBAAQgB,KAAK,SAASH,UAAU,SAASS,QAAStB,EAAlD,oBAEJ,qBAAKa,UAAU,YAAf,SAEInB,EAAMO,KAAI,SAACC,EAAgBqB,GACzB,OACE,sBAAKV,UAAU,aAAf,UACE,6BAAKX,EAAeE,OACpB,sBAAKS,UAAU,UAAf,UACE,mBAAGA,UAAU,iBACXS,QAAS,kBAtDZ,SAACC,GAChB,IAAMC,EAAc9B,EAAM+B,MAAK,SAACvB,GAC9B,OAAOA,EAAeC,KAAOoB,KAE/BpC,EAAaqC,EAAYpB,MACzBP,EAAY0B,GACZxB,GAAa,GAgDoB2B,CAASxB,EAAeC,KADzC,kBAEA,mBAAGU,UAAU,iBACXS,QAAS,kBA9CV,SAACC,GAClB,IAAMI,EAAcjC,EAAMkC,QAAO,SAAC1B,GAChC,OAAOA,EAAeC,KAAOoB,KAE/B5B,EAASgC,GA0CwBE,CAAW3B,EAAeC,KAD3C,yBAL6BoB,QAczC,qBAAKV,UAAU,YAAf,SACE,wBAAQA,UAAU,YAChBS,QAhDQ,WAChB3B,EAAS,KA8CH,SAEE,wDCnGGmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,K","file":"static/js/main.d886f653.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\n\nconst getLocalData = () => {\n  const lists = localStorage.getItem(\"todolist\");\n  if (lists) {\n    return JSON.parse(lists);\n  } else\n    return [];\n};\n\nfunction App() {\n  const [Taskinput, setTaskinput] = useState(\"\");\n  const [items, setItems] = useState(getLocalData());\n  const [editItems, setEditItem] = useState(\"\");\n  const [toggleBtn, setToggleBtn] = useState(false);\n\n  //add item function\n  const addItem = () => {\n    if (!Taskinput) {\n      alert(\"Please add any task\")\n    }else if(Taskinput && toggleBtn){\n      setItems(\n        items.map((currentElement)=>{\n          if(currentElement.id === editItems){\n          return{...currentElement,name:Taskinput};\n          }\n          return currentElement;\n        })\n      );\n      setTaskinput(\"\");\n      setEditItem(null);\n      setToggleBtn(false  );\n    }else {\n      const newTaskData = {\n        id: new Date().getTime().toString(),\n        name: Taskinput,\n      };\n      setItems([...items, newTaskData])\n      setTaskinput(\"\");\n    }\n  };\n\n  //edit  items function\n  const editItem = (index) => {\n    const item_edited = items.find((currentElement) => {\n      return currentElement.id === index;\n    });\n    setTaskinput(item_edited.name);\n    setEditItem(index);\n    setToggleBtn(true);\n  };\n\n  //Delete item function\n  const deleteItem = (index) => {\n    const updatedItem = items.filter((currentElement) => {\n      return currentElement.id !== index;\n    });\n    setItems(updatedItem);\n  };\n\n  //remove all elements\n  const removeAll = () => {\n    setItems([]);\n  };\n\n\n  // local storage implementation\n  useEffect(() => {\n    localStorage.setItem(\"todolist\", JSON.stringify(items));\n  }, [items])\n\n  return (\n    <div className=\"main-div\">\n      <div className=\"child-div\">\n        <figure>\n          <img className=\"todologo\" src=\"https://img.icons8.com/fluency/60/000000/tasklist.png\" alt=\"todologo\" />\n          <figcaption className=\"caption\">TaskBox</figcaption>\n        </figure>\n        <div className=\"addItems\">\n          <input className=\"inputField\"\n            type=\"text\"\n            placeholder=\"Add Task here...\"\n            value={Taskinput}\n            onChange={(event) => setTaskinput(event.target.value)}\n          />\n          {toggleBtn \n          ? <button className=\"material-icons\" className=\"addBtn\" onClick={addItem}>Edit</button> \n          : <button type=\"button\" className=\"addBtn\" onClick={addItem}>Add</button>}\n        </div>\n        <div className=\"showItems\">\n          {\n            items.map((currentElement, index) => {\n              return (\n                <div className=\"singleItem\" key={index}>\n                  <h3>{currentElement.name}</h3>\n                  <div className=\"todoBtn\">\n                    <i className=\"material-icons\"\n                      onClick={() => editItem(currentElement.id)}>edit</i>\n                    <i className=\"material-icons\"\n                      onClick={() => deleteItem(currentElement.id)}>delete</i>\n                  </div>\n                </div>\n              )\n            })\n          }\n\n        </div>\n        <div className=\"showItems\">\n          <button className=\"removeAll\"\n            onClick={removeAll}>\n            <span>Remove All</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}